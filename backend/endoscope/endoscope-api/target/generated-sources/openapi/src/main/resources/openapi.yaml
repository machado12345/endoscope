openapi: 3.0.3
info:
  contact:
    email: endoscope@localhost
    name: endoscope
  description: API for endoscope
  title: API for endoscope
  version: 1.0.0
servers:
- url: /
tags:
- description: directory API
  name: directory
- description: image API
  name: image
- description: auth API
  name: auth
paths:
  /auth/signup:
    post:
      description: Register a new user
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEntity'
        description: User registration data
        required: true
      responses:
        "200":
          description: User registered successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Register a new user
      tags:
      - auth
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: auth
  /auth/login:
    post:
      description: "Authenticate user with email and password, and generate JWT token"
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        description: User login credentials
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Authenticate user and generate JWT token
      tags:
      - auth
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: auth
  /auth/generateBackUp:
    post:
      description: Generate backup of the database
      operationId: generateBackUp
      responses:
        "200":
          description: Backup generated successfully
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Generate backup of the database
      tags:
      - auth
      x-accepts: application/json
      x-tags:
      - tag: auth
  /auth/uploadBackup:
    post:
      description: Upload backup of the database
      operationId: uploadBackUp
      responses:
        "200":
          description: Backup upload successfully
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Upload backup of the database
      tags:
      - auth
      x-accepts: application/json
      x-tags:
      - tag: auth
  /directories:
    get:
      description: Get directories
      operationId: getDirectories
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DirectoryEntity'
                type: array
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Get directories
      tags:
      - directory
      x-accepts: application/json
      x-tags:
      - tag: directory
    post:
      description: Add or Edit description of directory
      operationId: addOrEditDirectoryDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryDescriptionUpsert'
        description: Directory description to add or edit
        required: true
      responses:
        "200":
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Add or Edit description of directory
      tags:
      - directory
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: directory
    put:
      description: Create directory
      operationId: createDirectory
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DirectoryEntity'
              type: array
        description: Directory to create
        required: true
      responses:
        "200":
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Create directory
      tags:
      - directory
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: directory
  /directories/{directoryId}:
    delete:
      description: Delete directory
      operationId: deleteDirectory
      parameters:
      - explode: false
        in: path
        name: directoryId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Delete directory
      tags:
      - directory
      x-accepts: application/json
      x-tags:
      - tag: directory
    get:
      description: Get directory by ID
      operationId: getDirectoryById
      parameters:
      - explode: false
        in: path
        name: directoryId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryEntity'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Get directory by ID
      tags:
      - directory
      x-accepts: application/json
      x-tags:
      - tag: directory
    post:
      description: Edit directory
      operationId: editDirectory
      parameters:
      - explode: false
        in: path
        name: directoryId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryEntityUpdate'
        description: Directory to edit
        required: true
      responses:
        "200":
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Edit directory
      tags:
      - directory
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: directory
  /directories/subDirectories/{directoryId}:
    get:
      description: Get sub directories
      operationId: getSubDirectories
      parameters:
      - explode: false
        in: path
        name: directoryId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DirectoryEntity'
                type: array
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Get sub directories
      tags:
      - directory
      x-accepts: application/json
      x-tags:
      - tag: directory
    put:
      description: Create sub directory
      operationId: createSubDirectory
      parameters:
      - explode: false
        in: path
        name: directoryId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DirectoryEntity'
              type: array
        description: Sub Directory to create
        required: true
      responses:
        "200":
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Create sub directory
      tags:
      - directory
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: directory
  /images:
    post:
      description: Edit description of Image
      operationId: editImageDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageDescriptionUpsert'
        description: Image description to edit
        required: true
      responses:
        "200":
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Edit description of Image
      tags:
      - image
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: image
  /images/{imageId}:
    delete:
      description: Delete image
      operationId: deleteImage
      parameters:
      - explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Delete image
      tags:
      - image
      x-accepts: application/json
      x-tags:
      - tag: image
    get:
      description: Get image  by ID
      operationId: getImageById
      parameters:
      - explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageEntity'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Get image  by ID
      tags:
      - image
      x-accepts: application/json
      x-tags:
      - tag: image
  /images/directory/{directoryId}:
    get:
      description: Get Images by directory ID
      operationId: getImagesByDirectoryId
      parameters:
      - explode: false
        in: path
        name: directoryId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ImageEntity'
                type: array
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Get Images by directory ID
      tags:
      - image
      x-accepts: application/json
      x-tags:
      - tag: image
    put:
      description: Create image in directory
      operationId: createImageInDirectory
      parameters:
      - explode: false
        in: path
        name: directoryId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ImageEntity'
              type: array
        description: Image to create
        required: true
      responses:
        "200":
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: Create image in directory
      tags:
      - image
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: image
components:
  schemas:
    UserEntity:
      example:
        education: education
        role: role
        gender: gender
        fullName: fullName
        dateOfBirth: 2000-01-23
        workPlaceSetting: workPlaceSetting
        userId: 0
        workLocation: workLocation
        password: password
        medicalId: medicalId
        salutation: salutation
        countryOfOrigin: countryOfOrigin
        medicalSpeciality: medicalSpeciality
        email: email
        age: age
      properties:
        userId:
          description: The user's ID
          type: integer
        email:
          description: The user's email address
          format: email
          type: string
        password:
          description: The user's password
          format: password
          type: string
        salutation:
          description: "The user's salutation (e.g., Mr., Ms., Dr.)"
          type: string
        gender:
          description: The user's gender
          type: string
        fullName:
          description: The user's full name
          type: string
        age:
          description: The user's age
          type: string
        dateOfBirth:
          description: The user's date of birth
          format: date
          type: string
        countryOfOrigin:
          description: The user's country of origin
          type: string
        workLocation:
          description: The user's work location
          type: string
        workPlaceSetting:
          description: The user's workplace setting
          type: string
        medicalId:
          description: The user's medical ID
          type: string
        medicalSpeciality:
          description: The user's medical specialty
          type: string
        education:
          description: The user's education
          type: string
        role:
          description: The user's role
          type: string
      type: object
    UserLoginRequest:
      example:
        password: password
        email: email
      properties:
        email:
          description: The user's token
          type: string
        password:
          description: The user's password
          format: password
          type: string
      type: object
    UserLoginResponse:
      example:
        role: role
        name: name
        expiration: ""
        email: email
        token: token
      properties:
        token:
          description: The user's token
          format: string
          type: string
        expiration:
          description: The expiration time of the token
          type: long
        email:
          description: The user's email
          format: string
          type: string
        name:
          description: The user's name
          format: string
          type: string
        role:
          description: The user's role
          format: string
          type: string
      type: object
    UnauthorizedError:
      properties:
        message:
          description: Error message
          type: string
      type: object
    BadRequestError:
      properties:
        message:
          description: Error message
          type: string
      type: object
    DirectoryEntity:
      example:
        imageCount: 1
        directoryPosition: 5
        parentDirectory: 6
        directoryId: 0
        directoryDescription: directoryDescription
        directoryName: directoryName
      properties:
        directoryId:
          description: The directory ID
          type: integer
        directoryName:
          description: The directory name
          type: string
        directoryDescription:
          description: The directory description
          type: string
        parentDirectory:
          description: The parent directory id
          type: integer
        imageCount:
          description: The number of images in the directory
          type: integer
        directoryPosition:
          description: The position of the directory
          type: integer
      type: object
    DirectoryEntityUpdate:
      example:
        directoryPosition: 0
        directoryName: directoryName
      properties:
        directoryName:
          description: The directory name
          type: string
        directoryPosition:
          description: The position of the directory
          type: integer
      type: object
    DirectoryDescriptionUpsert:
      example:
        description: description
        directoryId: ""
      properties:
        directoryId:
          description: The directory ID
          type: long
        description:
          description: The directory description
          type: string
      type: object
    ImageEntity:
      example:
        imageId: 0
        imageName: imageName
        uploadDate: ""
        imageData: imageData
        description: description
        directory: 6
        uploadedBy: uploadedBy
      properties:
        imageId:
          description: The image ID
          type: integer
        imageName:
          description: The image name
          type: string
        directory:
          description: The directory ID where the image belongs
          type: integer
        uploadedBy:
          description: The name of the user who uploaded the image
          type: string
        uploadDate:
          description: The upload date of the image in milliseconds since Unix epoch
          type: long
        description:
          description: Description of the image
          type: string
        imageData:
          description: Binary image data in base64 format
          format: byte
          type: string
      type: object
    ImageDescriptionUpsert:
      example:
        imageId: ""
        description: description
      properties:
        imageId:
          description: The image ID
          type: long
        description:
          description: The image description
          type: string
      type: object
    InternalServerError:
      properties:
        message:
          description: The error message
          type: string
        code:
          description: The error code
          type: integer
      type: object
